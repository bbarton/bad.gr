// Generated by CoffeeScript 1.3.3
(function() {
  var TwitterStrategy, app, express, passport, port, redis, rtg;

  if (process.env.REDISTOGO_URL) {
    rtg = require('url').parse(process.env.REDISTOGO_URL);
    redis = require('redis').createClient(rtg.port, rtg.hostname);
    redis.auth(rtg.auth.split(':')[1]);
  } else {
    redis = require('redis').createClient();
  }

  express = require('express');

  app = express();

  passport = require('passport');

  TwitterStrategy = require('passport-twitter').Strategy;

  app.use(express.cookieParser());

  app.use(express.bodyParser());

  app.use(express.cookieSession({
    secret: process.env.COOKIE_SECRET
  }));

  app.use(passport.initialize());

  app.use(passport.session());

  app.use(express["static"](__dirname + '/static'));

  app.use(function(req, res, next) {
    var cookie_slice, cookies;
    cookies = req.cookies['connect.sess'];
    if (cookies) {
      cookie_slice = cookies.substring(4, cookies.length).match(/(.*})\./)[1];
      req.session.oauth_twitter = JSON.parse(cookie_slice)['oauth:twitter'];
    }
    return next();
  });

  passport.serializeUser(function(user, done) {
    return done(null, user.id);
  });

  passport.deserializeUser(function(id, done) {
    return redis.hgetall('user:' + id, function(err, user) {
      return done(err, user);
    });
  });

  passport.use(new TwitterStrategy({
    consumerKey: process.env.TWITTER_CONSUMER_KEY,
    consumerSecret: process.env.TWITTER_CONSUMER_SECRET,
    callbackURL: 'http://127.0.0.1:3000/auth/twitter/callback'
  }, function(token, tokenSecret, profile, done) {
    return redis.get('twitter:' + profile.id, function(err, uid) {
      if (uid) {
        return redis.hgetall('user:' + uid, function(err, user) {
          return done(err, user);
        });
      } else {
        return redis.incr('users', function(err, num) {
          redis.set('twitter:' + profile.id, num);
          redis.hset('user:' + num, 'twitter', profile.id);
          redis.hset('user:' + num, 'id', num);
          return redis.hgetall('user:' + num, function(err, user) {
            return done(err, user);
          });
        });
      }
    });
  }));

  app.get('/auth/twitter', passport.authenticate('twitter'));

  app.get('/auth/twitter/callback', passport.authenticate('twitter', {
    failureRedirect: '/'
  }), function(req, res) {
    console.log(req.cookies);
    console.log(req.session);
    redis.hset('user:' + req.user.id, 'oauth:twitter_key', req.session['oauth_twitter'].oauth_token);
    redis.hset('user:' + req.user.id, 'oauth:twitter_secret', req.session['oauth_twitter'].oauth_token_secret);
    return res.redirect('/');
  });

  port = process.env.PORT || 3000;

  app.listen(port);

}).call(this);
